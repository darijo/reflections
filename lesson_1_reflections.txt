How did viewing a diff between two versions of a file help you see the bug that was introduced?
By looking what has changed between two files (sign + and -) and looking only at differences
process of finding a mistake is much quicker.

How could having easy access to the entire history of a file make you a more efficient programmer in the long term?
When something is broke, you could easily switch to older version that work and then 
compare it to see where you might have introuced a bug.

What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google docs does?
You can manually commit whenever a logical change is made. Sometimes you can change a too late
or forget to change. Automatically can often commit, but it can commit a unfinished code, or code that don't work

Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?
Because large projects consists of multiple files. And every commit should be done on all files.

How can you use the commands git log and git diff to view the history of files?
With git log you can see a history of changes and with diff command you can see detail diff
between two commits

How might using version control make you more confident to make changes that could break something?
You can easily change to older working version.

 Now that you have your workspace set up, what do you want to try using Git for?
 Making cool apps for Android

